@using DevExpress.Blazor.Internal
@using MIT.Razor.Pages.Component.Popup

@inject AppData _appData
@inherits MainHeaderFinalBase


<header class="demo-header-container ">


  <nav class="demo-header navbar header-navbar p-0">
    <button class="navbar-toggler d-block" @onclick="OnToggleClick">
      <span class="navbar-toggler-icon"></span>
    </button>



    <div class="logo-image">
      <a href="/" target="_blank" title="한주 유틸리티">
        <span class="logo-img"></span>
      </a>
      <div class="logo-sep"></div>
      <a href="" target="_blank" title="모니터링 시스템">
        <span class="logo-sec-img"></span>
      </a>
    </div>



    <div class="demo-btn-container d-flex">




      <div id="user-icon">
        <DxButton  IconCssClass="" Text="user" RenderStyle="ButtonRenderStyle.Secondary" CssClass="" Click="() => IsOpen = !IsOpen">
          <i class="bi bi-person-circle"></i>
        </DxButton>
      </div>

      <div class="btn-sep"></div>

      <DxButton CssClass="full-button" RenderStyle="ButtonRenderStyle.Secondary" onclick="toggleFullScreen();">
        <i class="bi bi-fullscreen"></i>
      </DxButton>

      

      <div id="user-size">
        <DxButton RenderStyle="ButtonRenderStyle.Secondary" Click="() => IsSizeOpen = !IsSizeOpen">
          <i class="bi bi-fonts"></i>
        </DxButton>
      </div>


      <div id="user-theme">
        <DxButton RenderStyle="ButtonRenderStyle.Secondary" Click="() => IsThemeOpen = !IsThemeOpen">
          <i class="bi bi-palette2"></i>
        </DxButton>
      </div>


      <DxFlyout @bind-IsOpen="@IsThemeOpen" PositionTarget="#user-theme"
                FitToRestriction=false
                CloseMode="FlyoutCloseMode.Hide"
                HeaderVisible="true"
                HeaderText="@(  string.IsNullOrEmpty(USER_THEME)?"Mit":ChoiceThemeTitle )"
                CloseOnOutsideClick=true>
        <BodyContentTemplate>
          <ul class="mit-sizemode-choice mit-theme-choice blazor-themes ">
            @foreach (var mt in mitThemes){

              if (string.IsNullOrEmpty(USER_THEME)) {
                ChoiceThemeTitle = mt.title;
                }

              <li @onclick="@(()=> themeClick1(mt.theme))" class=" blazor-themes @( ( string.IsNullOrEmpty(USER_THEME) || USER_THEME==mt.theme)?" theme-choice":"" ) "><a class=" @mt.theme "><i class="bi bi-palette2  "></i></a><span>@mt.title</span></li>
         
            }
          </ul>
        </BodyContentTemplate>
      </DxFlyout>





      <DxFlyout @bind-IsOpen="@IsOpen"
      PositionTarget="#user-icon"
      RestrictionTarget="#Navigation-Flyout-Overview"
      FitToRestriction=false
      CloseMode="FlyoutCloseMode.Close"
      HeaderVisible="true"
      HeaderText="유저정보"
      Position="@Position"
      PreventCloseOnPositionTargetClick="true"
      CloseOnOutsideClick=true>
        <BodyContentTemplate>
          <center>
            <DxButton Text="@($"{USER_NAME}")" CssClass="user-btn-text" RenderStyle="ButtonRenderStyle.None" RenderStyleMode="ButtonRenderStyleMode.Text"></DxButton>
            <br />
            <DxButton Text="@($"({USER_ID})")" CssClass="user-btn-text" RenderStyle="ButtonRenderStyle.None" RenderStyleMode="ButtonRenderStyleMode.Text"></DxButton>

            <div class="pe-1">
              <DxButton CssClass=""
              Text="Logout"
              Click="@OnLogout" />
            </div>
          </center>
        </BodyContentTemplate>
      </DxFlyout>





      <DxFlyout @bind-IsOpen="@IsSizeOpen" PositionTarget="#user-size"
      FitToRestriction=false
      CloseMode="FlyoutCloseMode.Hide"
      HeaderVisible="true"
      HeaderText="VIEW"
      CloseOnOutsideClick=true>
        <BodyContentTemplate>
          <ul class="mit-sizemode-choice">
            <li @onclick="FontSizeClick1"><i class="bi bi-dice-1"></i><span>Small</span></li>
            <li @onclick="FontSizeClick2"><i class="bi bi-dice-2"></i><span>Medium</span></li>
            <li @onclick="FontSizeClick3"><i class="bi bi-dice-3"></i><span>Large</span></li>
          </ul>            
        </BodyContentTemplate>
      </DxFlyout>

      <DxButton Text="Setting" Visible="false"
      RenderStyle="ButtonRenderStyle.Secondary"
      Click="@OnSetting" >
        <i class="bi bi-gear"></i>
      </DxButton>

    </div>


  </nav>



</header>


@code{


}

<style>
  .mit-sizemode-choice{
  list-style: none;
  margin: 0;
  padding: 0;
  }


  .mit-sizemode-choice li{
  padding: 5px 8px;
  display: block;
  cursor: pointer;
  clear: both;
  width: 6rem;
  float: left;
  margin: 3px 0;
  border-radius: 4px;
  box-shadow: 1px 1px 6px 0px var(--bs-secondary-color);
    }

  .mit-theme-choice li {
    width: 8rem;
  }

  .mit-sizemode-choice li:hover {
  background-color: var(--bs-secondary-color);
  }

  .mit-sizemode-choice li i {
  float: left;

  }
  .mit-sizemode-choice li span{
  padding: 0.2rem 0 0 0.5rem;
  display: block;
  float: left;
  font-size: 0.7rem;
  }

  .theme-choice{
    background-color: var(--bs-code-color);
  }


</style>
<script>

  function toggleFullScreen() {
  if (!document.fullscreenElement) {
  document.documentElement.requestFullscreen()
  } else {
  if (document.exitFullscreen) {
  document.exitFullscreen()
  }
  }
  }

  function toggleFullScreen_ele(element) {
  if (!document.fullscreenElement) {
  if (element.requestFullscreen) return element.requestFullscreen()
  if (element.webkitRequestFullscreen)
  return element.webkitRequestFullscreen()
  if (element.mozRequestFullScreen) return element.mozRequestFullScreen()
  if (element.msRequestFullscreen) return element.msRequestFullscreen()
  } else {
  if (document.exitFullscreen) return document.exitFullscreen()
  if (document.webkitCancelFullscreen)
  return document.webkitCancelFullscreen()
  if (document.mozCancelFullScreen) return document.mozCancelFullScreen()
  if (document.msExitFullscreen) return document.msExitFullscreen()
  }
  }

</script>



