@page "/operationstatusviewer"
@layout MainLayoutEmp

@using DevExpress.Blazor.Reporting
@using DevExpress.XtraReports.UI
@using HanjuReport.Reports
@using System.Data
@using HanjuReport.Service
@using MIT.ServiceModel
@using Microsoft.AspNetCore.Components;
@using Newtonsoft.Json

@inject RptService _rptService

<link href="_content/DevExpress.Blazor.Themes/blazing-berry.bs5.css" rel="stylesheet" />
<link href="_content/DevExpress.Blazor.Reporting.Viewer/css/dx-blazor-reporting-components.bs5.css" rel="stylesheet" />
<style>


    .dxbrv-bricks-container.dxbrv-bricks-container-border-primary {
    border: 0;
    }

    .dxbrv-wrapper .dxbrv-surface-container {
    width: 100% !important;
    background: white;
    }


    .dxbrv-wrapper {
    border: 0 !important;
    }


    .dxbrv-wrapper .dxbrv-viewbox .dxbrv-surface-wrapper .dxbrv-document-surface {
    text-align: center;
    position: relative;
    /* top: -48px; */
    z-index: 99;
    }

    .dxbrv-wrapper .dxbrv-viewbox .dxbrv-surface-wrapper .dxbrv-document-surface .dxbrv-report-preview-content-flex-item {
    background: white;
    }

    .dxbrv-wrapper .dxbrv-viewbox .dxbrv-surface-wrapper {
    background: white;
    }
</style>
<DxReportViewer @ref="reportViewer" Report="Report" RootCssClasses="w-100 h-100"   />

@code{

    DxReportViewer reportViewer;
    XtraReport Report ;
    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();

        OperationStatusReport mtr = new OperationStatusReport();

        Report = mtr;

        string formDataJson = _rptService.FormData;
    RptInfo ri = null;
    try{
      if (!string.IsNullOrEmpty(formDataJson)) {
        ri = JsonConvert.DeserializeObject<RptInfo>(formDataJson);
        Report.DataSource = ri.Data;
        mtr.SetTitle(ri.Title, ri.SubTitle);
      }

    }
    catch(Exception ee){
    }

  }

}
