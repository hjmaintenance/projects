@{
    /*
    * 작성자명 : 김지수
    * 작성일자 : 25-02-05
    * 최종수정 : 25-02-05
    * 화면명 : 전기 시간대 사용량 현황
     * 프로시저 : P_HMI_USE_DAYELCTIME_SELECT01
    */
}

@using MIT.Razor.Pages.Component.Charts
@using MIT.Razor.Pages.Component.DataEdits
@using MIT.Razor.Pages.Component.Grid
@using MIT.Razor.Pages.Component.Grid.RepositoryItem
@using MIT.UI.UMS
@using System.Data
@using System.Linq
@using static MIT.Razor.Pages.TrendCode
@inherits US2010QA1Base


<DxFormLayout CssClass="w-100">
    @{ /* search area */ }
    <DxFormLayoutGroup Caption="조회조건" CssClass="mit-search-area" Decoration="FormLayoutGroupDecoration.Card" ColSpanSm="12">
        <DxFormLayoutItem Caption="조회일" ColSpanSm="4"><CommonDateEdit @ref="@DATE"/></DxFormLayoutItem>
        <DxFormLayoutItem Caption="수용가" ColSpanSm="4">
            @if (isHanju)
            {
                <MitCombo CodeId="company2" Etc0="PW" @bind-Value="@COM_ID" SelectedItemChanged="COM_Chnage" SearchMode="ListSearchMode.AutoSearch" SearchFilterCondition="ListSearchFilterCondition.Contains" IsAll="true"/>
            }
            else
            {
                <CommonTextBox @ref=@ComText ReadOnly="true" />
            }
        </DxFormLayoutItem>
        <DxFormLayoutItem Caption="FDR" ColSpanSm="4">
            @* <MitCombo CodeId="fdr" @bind-Value="@FDR_ID" @ref="FDR_CB" IsDataFixed="false" IsAll="true"/> *@
            <MitTagBox CodeId="FDR_PW" @bind-Values="@FDRValues" @ref="FDR_TB" IsDataFixed="false"/>
            
        </DxFormLayoutItem>
    </DxFormLayoutGroup>

    @{ /* content area */ }
    <DxFormLayoutGroup Caption="전기 시간대 사용량 현황" CssClass="mit-content-area" Decoration="FormLayoutGroupDecoration.Card" ColSpanSm="12">
        <DxFormLayoutItem ColSpanSm="12">
            <CommonGrid @ref="Grd1" CssClass="setting-program-grid"
                        RowDoubleClick="OnRowDoubleClick"
                        IsExportDocEnabled=false
                        IsExportImageEnabled=false
                        IsExportPDFEnabled=false
                        IsExportXlsxEnabled=false
                        ExportFileName="전기 시간대 사용량 현황"
                        IsShowToolBar=true>
                <DataColumnsTemplate> 
                    <DxGridDataColumn Caption="구분" FieldName="HH" TextAlignment="GridTextAlignment.Center" CaptionAlignment="GridTextAlignment.Center"><CellDisplayTemplate Context="context2"><RepositoryItemTextBox CellContext="context2" ReadOnly="true" /></CellDisplayTemplate></DxGridDataColumn>
                    <DxGridBandColumn Caption="사용량(kWh)" CaptionAlignment="GridTextAlignment.Center">
                        <Columns>
                            <DxGridDataColumn Caption="경부하" FieldName="HI_USEQTY_C" TextAlignment="GridTextAlignment.Right" CaptionAlignment="GridTextAlignment.Center"><CellDisplayTemplate Context="context2"><RepositoryItemSpinEdit CellContext="context2" ReadOnly="true" DisplayFormat="N0" /></CellDisplayTemplate></DxGridDataColumn>
                            <DxGridDataColumn Caption="중부하" FieldName="HI_USEQTY_A" TextAlignment="GridTextAlignment.Right" CaptionAlignment="GridTextAlignment.Center"><CellDisplayTemplate Context="context2"><RepositoryItemSpinEdit CellContext="context2" ReadOnly="true" DisplayFormat="N0" /></CellDisplayTemplate></DxGridDataColumn>
                            <DxGridDataColumn Caption="최대부하" FieldName="HI_USEQTY_B" TextAlignment="GridTextAlignment.Right" CaptionAlignment="GridTextAlignment.Center"><CellDisplayTemplate Context="context2"><RepositoryItemSpinEdit CellContext="context2" ReadOnly="true" DisplayFormat="N0" /></CellDisplayTemplate></DxGridDataColumn>
                            <DxGridDataColumn Caption="계" FieldName="HI_USEQTY" TextAlignment="GridTextAlignment.Right" CaptionAlignment="GridTextAlignment.Center"><CellDisplayTemplate Context="context2"><RepositoryItemSpinEdit CellContext="context2" ReadOnly="true" DisplayFormat="N0" /></CellDisplayTemplate></DxGridDataColumn>
                        </Columns>
                    </DxGridBandColumn>
                    <DxGridDataColumn Caption="평균사용량(kW)" FieldName="H_USEQTY" TextAlignment="GridTextAlignment.Right" CaptionAlignment="GridTextAlignment.Center"><CellDisplayTemplate Context="context2"><RepositoryItemSpinEdit CellContext="context2" ReadOnly="true" DisplayFormat="N0" /></CellDisplayTemplate></DxGridDataColumn>
                    <DxGridDataColumn Caption="당월최대전력(kW)" FieldName="PEAK" TextAlignment="GridTextAlignment.Right" CaptionAlignment="GridTextAlignment.Center"><CellDisplayTemplate Context="context2"><RepositoryItemSpinEdit CellContext="context2" ReadOnly="true" DisplayFormat="N0" /></CellDisplayTemplate></DxGridDataColumn>
                </DataColumnsTemplate>
            </CommonGrid>
        </DxFormLayoutItem>
        @* <MitChartLine HeightStr="200px" XName="GAUGE_HOUR" YTitles="경부하,중부하,최대부하,계" YNames="HI_USEQTY_C,HI_USEQTY_A,HI_USEQTY_B" @ref="Chart1" IsShowLegend="true" IsShowToolTip="true"></MitChartLine> *@
    </DxFormLayoutGroup>





</DxFormLayout>

@code{
    private async void COM_Chnage(Razor.Pages.CommCode args)  {
        FDR_TB.Etc0 = args.Name;
    }

    private void OnRowDoubleClick(GridRowClickEventArgs e)
    {
        if (CommonPopupService != null)
        {

            // 수용가..
            var com_id = isHanju ? COM_ID : USER_ID;


            // 이걸로 구분
            // e.Column



            TrendCode tc = new TrendCode()
                {
                    ComId = com_id,
                    FdrId = FDR_ID,
                    TrendType = TrendTypeEnum.Real,
                    CompreDate = DateTime.ParseExact(DATE.EditValue, "yyyy-MM-dd", null).AddDays(-1),
                    GaugeType = GAUGE_TYPE.PW
                };

            CommonPopupService.Show(typeof(UH1070QA1_POP), "Trend View", Width: 1280, Height: 740, Parameter: tc, CloseCallback: OnCloseCallback);
        }
    }


    protected async Task OnCloseCallback(PopupResult result)
    {
        if (result.PopupResultType != PopupResultType.OK) return;
        await Task.Delay(1);

    }
}

<style>

</style>