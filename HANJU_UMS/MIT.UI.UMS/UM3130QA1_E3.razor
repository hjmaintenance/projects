@{
  /*
  * 작성자명 : 이순열
  * 작성일자 : 25-02-27
  * 최종수정 : 25-04-04
  * 화면명 : 계측기별 Peak값 조회
  * 프로시저명 : : P_HMI_DAY_USEQTY_PEAK, P_HMI_TIME_USEQTY_PEAK, P_HMI_MIN_UEEQTY_PEAK, P_HMI_PEAK_VALUE_RST
  */
}
@using MIT.Razor.Pages.Component.Grid
@using MIT.Razor.Pages.Component.Grid.RepositoryItem
@using MIT.Razor.Pages.Component.DataEdits
@using MIT.Razor.Pages.Component.Charts
@using System.Data
@using MIT.ServiceModel
@using System.Drawing
@using Microsoft.JSInterop
@inject IJSRuntime JS
@inherits UM3130QA1_E3Base



<DxFormLayout CssClass="w-100">
        @{ /* search area */ }



  <DxFormLayoutGroup Caption="조회조건" CssClass="mit-search-area" Decoration="FormLayoutGroupDecoration.Card" ColSpanSm="12">

    <DxFormLayoutItem Caption="" ColSpanSm="12" >
      <div class="aa-div">
        <label class="aa dxbl-fl-cpt dxbl-text">조회 년월</label>
        <div class="aa" style="width:150px;">
          @* <CommonDateEdit @ref="@SYYYYMM" DisplayFormat="yyyy-MM-dd" /> *@
    
          <DxDateEdit @bind-Date="@StartOffsetDt" TimeSectionVisible=true  DisplayFormat="yyyy-MM-dd HH:mm" Format="yyyy-MM-dd HH:mm"   />



        </div>
        <div class="aa" style="width:150px;">
          @* <CommonDateEdit @ref="@EYYYYMM" DisplayFormat="yyyy-MM-dd" /> *@

          <DxDateEdit @bind-Date="@EndOffsetDt" TimeSectionVisible=true DisplayFormat="yyyy-MM-dd HH:mm" Format="yyyy-MM-dd HH:mm" />
        </div>
        <label class="aa dxbl-fl-cpt dxbl-text">구분</label>


        <div class="aa" style="width:80px;">
          <MitCombo2 CodeId="GAUGE_TYPE" @bind-Value=@GAUGE_TYPE_Code IsAll=false SelectedItemChanged="COM_Change_G" />
        </div>

        <label class="aa dxbl-fl-cpt dxbl-text">수용가</label>
        <div class="aa" style="width:200px;">
          <MitCombo2 CodeId="COMPANY2"
                     @ref=ComObj
                     @bind-Value="@SelComp"
                     SelectedItemChanged="COM_Change"
                     SearchFilterCondition="ListSearchFilterCondition.Contains" IsDataFixed=false />
        </div>

        
        <label class="aa dxbl-fl-cpt dxbl-text">유틸리티</label>
        <div class="aa" style="width:250px;">
          <MitCombo2 CodeId="FDR_TP"
                     @ref=UtilObj
                     @bind-Value="@SelUtil"
                     SearchFilterCondition="ListSearchFilterCondition.Contains" IsAll=false IsDataFixed=false />
        </div>

        <div class="aa" style="display:@IsSTChoiceStr;">
          <label class="aa dxbl-fl-cpt dxbl-text">선택</label>
          <div class="aa" style="width:200px;">
            <DxCheckBox CssClass=" float-start" @bind-Checked="@IsCheckedQty" LabelPosition="LabelPosition.Right">유량 </DxCheckBox>
            <DxCheckBox CssClass=" float-start" @bind-Checked="@IsCheckedPress">압력 </DxCheckBox>
            <DxCheckBox CssClass=" float-start" @bind-Checked="@IsCheckedTemp">온도 </DxCheckBox>
          </div>
        </div>


        <label class="aa dxbl-fl-cpt dxbl-text"></label>
        <div class="aa sub-btns" style="width:300px;">
  
          <a class="btn btn-primary" title="유틸리티 추가" @onclick="COM_ADD_U"><i class="bi bi-plus-square"></i></a>
          
          <a class="btn btn-primary" title="Data Road" @onclick="@(e=>btn_Search())"><i class="bi bi-arrow-clockwise"></i></a>

          <a class="btn btn-primary" title="범위값 보관" @onclick=@(() => {SetLoad();})><i class="bi bi-sliders"></i></a>
          <a class="btn btn-primary" title="유틸리티 창" @onclick="@(e=>{GridVisible=!GridVisible; DisplayReLoad();})"><i class="bi bi-grid-3x2-gap"></i></a>
          @* <a class="btn btn-primary" title="일별 peak 정보" @onclick="@(e=>PeakWindowVisible=!PeakWindowVisible)"><i class="bi bi-graph-up-arrow"></i></a> *@
          @* <a class="btn btn-secondary" onclick=" toggleFullScreen_ele(document.getElementById('myChart').parentNode.parentNode);"><i class="bi bi-arrows-fullscreen"></i></a> *@

          <a class="btn btn-primary" title="Data Road" @onclick="@(e=>DisplayReLoad())"><i class="bi bi-aspect-ratio"></i></a>
        </div>
        



      </div>
    </DxFormLayoutItem>




  </DxFormLayoutGroup>

</DxFormLayout>




<DxSplitter CssClass="border split-chat-div " Height="800px" Width="100%" Orientation="Orientation.Vertical" >
  <Panes>
    <DxSplitterPane Size="150px" Collapsed=GridVisible AllowCollapse="true">

      <div class="w-100 h-100" style="overflow:auto;">
        <table class="targetinfo float-start">
          <tr>
            <th colspan="2">유틸리티</th>
            <th>최저</th>
            <th>최대</th>
            <th>평균</th>
            <th>Peak</th>
            <th>상세Peak</th>
            <th>Y축</th>
            <th>보기</th>
            <th>제외관리</th>
          </tr>

          @foreach (var i in targetInfos) {

            <tr>
              <td class="text-center" style="width: 11px"><span class="badge bg-danger" @onclick=@(e => RemoveTaret(e, @i ) )>x</span></td>
              <td class="text-start"><span class="badge" style="background-color:@(i.RQtyColor);">&nbsp;</span>@i.Descript2 @i.McType2Name </td>
              <td>@i.Min</td>
              <td>@i.Max</td>
              <td>@i.Avg</td>
              <td>@i.Peak</td>
              <td>@i.Peak2</td>
              <td class="text-center">
                <div>
                  <div style="float:left;margin-right:5px;">
                    <DxCheckBox Checked="@i.IsYView" CheckedChanged=@((bool value) => CheckedChanged(value, i, "Y"))></DxCheckBox>
                  </div>
                  <div style="width:200px;float:left;">
                    <DxSpinEdit CssClass="ctrl-val" Value=@i.MoveMin  ValueChanged="@((decimal newValue) => OnJsReload(i, "min", newValue))"  /> 
                    <span class="ctrl-span">-</span> 
                    <DxSpinEdit CssClass="ctrl-val" Value=@i.MoveMax   ValueChanged="@((decimal newValue) => OnJsReload(i, "max", newValue))" />
                  </div>
                  <div style="float:left;">
                    <input type="range" @onchange=@(e=>OnMoveChange2(e, i)) min="@(i.MoveGap *-1)" max="@(i.MoveGap)" class="" value="0" />
                  </div>
                </div>
              </td>
              <td class="text-center">
                <DxCheckBox Checked="@i.IsLineView" CheckedChanged=@((bool value) => CheckedChanged(value, i, "L"))></DxCheckBox>
              </td>
              <td class="text-center">
                @if (i.McType2 == "QTY") {
                  <span class="badge bg-primary" @onclick=@(e => TaretDayCtrl(e, @i ) )>제외관리</span>
                  <span class="badge bg-primary" @onclick=@(e=>btn_PeakList(@i.McId))>일별Peak</span>
                }
              </td>
            </tr>

          }


        </table>

      </div>

    </DxSplitterPane>
    <DxSplitterPane AllowCollapse="true">

      <div style="height:100%;">

        <div id="myChart-div" style="padding:5px; border:solid 1px gray; width:100%;clear: both; border-radius:5px; background-color:white; height:calc(100% - 66px); ">
          <canvas id="myChart" style="height:100%;width:100%;"></canvas>
        </div>


      
        <div style="height:66px;border:solid 0px red;">

          <DxRangeSelector 
            style="height: 130px;" 
            Width="100%" 
            ValueChanged="@OnValueChanged" 
            AllowSliderSwap="true"
            SelectedRangeStartValue=@StartValueC 
            SelectedRangeEndValue=@EndValueC
            Data=targetInfos>


        <DxRangeSelectorChart>



          @if (targetInfos != null) {


            @foreach (var cd in targetInfos) {

              <DxChartAreaSeries T="DPoint" TArgument="DateTime?" TValue="double?"
                                 Data="@cd.DPoints"
                                     Color="@cd.RQtyColor2"
                                 ArgumentField="@(dp => dp.Xtime)"
                                 ValueField="@(dp => dp.ViewQty)">
              </DxChartAreaSeries>

            }


          }


        </DxRangeSelectorChart>
        <DxRangeSelectorScale ValueType="ChartAxisDataType.DateTime" TickInterval="ChartAxisInterval.Minutes(10)"
                              StartValue="@StartValueF"
                              EndValue="@EndValueF">
        </DxRangeSelectorScale>


        <DxRangeSelectorSliderMarker>
          <DxTextFormatSettings LdmlString=@LabelFormatDate />
        </DxRangeSelectorSliderMarker>



      </DxRangeSelector>

        </div>

      </div>


    </DxSplitterPane>
  </Panes>
</DxSplitter>








<!-- pear 정보보기 -->
<DxWindow @bind-Visible=PeakWindowVisible
          HeaderText="일별 Peak 정보"
          ShowCloseButton="true"
          CloseOnEscape="true"
          AllowResize="true"
          Width="max(60vw, 500px)"
          MinWidth="500"
          MinHeight="150"
          Height="400"
          MaxWidth="600"
          MaxHeight="1000">


  <CommonGrid @ref="Grd1" CssClass="w-100">
    <DataColumnsTemplate>
      <DxGridDataColumn Caption="유틸리티" FieldName="InstrumentId" TextAlignment="GridTextAlignment.Center" CaptionAlignment="GridTextAlignment.Center">
        <CellDisplayTemplate Context="context2">
          <RepositoryItemTextBox CellContext="context2" ReadOnly="true" />
        </CellDisplayTemplate>
      </DxGridDataColumn>

      <DxGridDataColumn Caption="일자" FieldName="PeakDate" TextAlignment="GridTextAlignment.Center" CaptionAlignment="GridTextAlignment.Center">
      </DxGridDataColumn>

      <DxGridDataColumn Caption="Peak" FieldName="ExtendedPeakValue" TextAlignment="GridTextAlignment.Center" CaptionAlignment="GridTextAlignment.Center">
      </DxGridDataColumn>
    </DataColumnsTemplate>
  </CommonGrid>


</DxWindow>


<style>

  .crr-pg-UM3130QA1_E.main-toolbar {
    display: none;
  }

  .sub-btns > .btn {
    padding: 2px 8px 2px 8px;
  }

</style>



@code{

  
  
  protected async Task OnMoveChange2(ChangeEventArgs e, TargetInfo i){

    decimal pmoveVal = Convert.ToDecimal( e.Value );
    
    i.MoveMin += pmoveVal;
    i.MoveMax += pmoveVal;

    StateHasChanged();
    await JS.InvokeVoidAsync("JsSetLoad2", targetInfos);
    
    i.MoveBar = 0;
    StateHasChanged();
  }

  protected async Task OnJsReload(TargetInfo ti, string gb, decimal nval) {
    if (gb == "min") {
    ti.MoveMin = nval;
    }
    else {
      ti.MoveMax = nval;
    }
    await JS.InvokeVoidAsync("JsSetLoad2", targetInfos);
  }




  private async Task RemoveTaret( MouseEventArgs e , TargetInfo ti      ){
    targetInfos.Remove(ti);
    //await btn_Search();
    GetTargetInfo();
    await JS.InvokeVoidAsync("chartSetData", targetInfos);
  }


  protected async Task CheckedChanged(bool isCheck, TargetInfo ti, string gb) {

    switch(gb){
      case "XG":
        ti.IsXGrid = isCheck;
        break;
      case "YG":
        ti.IsYGrid = isCheck;
        break;
      case "L":
        ti.IsLineView = isCheck;
        break;
      case "Y":
        ti.IsYView = isCheck;
        break;
    }

    await JS.InvokeVoidAsync("chartSetData", targetInfos);
  }
  

  private async Task TaretDayCtrl(MouseEventArgs e, TargetInfo ti) {

    PerformExcludeDataCode excludeDataCode = new PerformExcludeDataCode() {
        StartDate = StartOffsetDt.DateTime, //  DateTime.ParseExact(SYYYYMM.EditValue, "yyyy-MM-dd", null),
        EndDate = EndOffsetDt.DateTime,// DateTime.ParseExact(EYYYYMM.EditValue, "yyyy-MM-dd", null),
        FdrId = ti.McId
      };
    CommonPopupService.Show(typeof(UH5120QA1_POP), "실적외 데이터 관리", Width: 1280, Height: 740, Parameter: excludeDataCode, CloseCallback: OnCloseCallback);

  }


  protected async Task OnCloseCallback(PopupResult result) {

    // peak 값 새로 가져온다.
    GetTargetInfo();
    StateHasChanged();
    //if (result.PopupResultType != PopupResultType.OK) return;
    //await Task.Delay(1);
  }



  protected async Task SetLoad() {

    foreach (var ti in targetInfos) {

       QueryService.ExecuteDatatableAsync("SP_MC_CHART_MINMAX_SAVE", new Dictionary<string, object?>()        {
                  {"MC_ID", ti.McId },
                  {"MC_MIN", ti.MoveMin },
                  {"MC_MAX", ti.MoveMax },
                  {"McType2", ti.McType2 },
              });
    }

      ToastService.ShowToast(new ToastOptions {
       ProviderName = "Positioning",
       Title = "범위값 보관",
       Text = "사용중인 범위값 보관 되었습니다." 
      });


    await JS.InvokeVoidAsync("JsSetLoad2", targetInfos);

  }


  
  // protected async Task DisplayReLoad() {


  //   await JS.InvokeVoidAsync("chartSetData", targetInfos);

  // }






}

