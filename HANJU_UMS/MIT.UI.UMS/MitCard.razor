<div class="row col-12 mit-card">

    <div class="col-5 card-name">

        <span class="fs-5 @GetCaptionCssClass()">@(Caption)</span>

    </div>
    <div class="col-7 card-data">

        <span class="fs-5">@(GetFormattedData())</span>
        <span class="badge bg-secondary">@Unit</span>

    </div>
</div>
@code {
    public enum CardUtilityType
    {
        None, Power, Steam, Water
    }

    [Parameter]
    public string Caption { get; set; } = "";

    [Parameter]
    public CardUtilityType UtilityType { get; set; } = CardUtilityType.None;

    [Parameter]
    public string DataFormat { get; set; } = "";


    [Parameter]
    public object Data
    {
        get => _data;
        set
        {
            if (_data != value)
            {
                _data = value;
                DataChanged.InvokeAsync(value);
            }
        }
    }
    private object _data;


    [Parameter]
    public EventCallback<object> DataChanged { get; set; }

    [Parameter]
    public string NullText { get; set; } = "빈값";

    [Parameter]
    public string Unit { get; set; } = "";


    private string GetCaptionCssClass()
    {
        string iconCss = UtilityType switch
        {
            CardUtilityType.Power => "bi bi-lightning-fill",
            CardUtilityType.Steam => "bi bi-fire",
            CardUtilityType.Water => "bi bi-droplet",
            _ => ""
        };
        return $"{iconCss}";
    }

    private string GetFormattedData()
    {
        if (Data == null || string.IsNullOrEmpty(Data + "")) return NullText;

        return !IsNumeric(Data) ? Data+"" : string.Format($"{{0:{DataFormat}}}", Data);
    }


    private bool IsNumeric(object value)
    {
        return value is sbyte || value is byte ||
               value is short || value is ushort ||
               value is int || value is uint ||
               value is long || value is ulong ||
               value is float || value is double || value is decimal;
    }
}

<style>
    .mit-card{
        display: flex;
        flex-flow: row nowrap;
        background: var(--dxbl-group-bg);
        margin: 0px 0px 0px 8px;
        width: calc(100% - 16px);
        border-bottom: solid 1px #dddcdc;
        padding: 15px 5px 15px 15px;
    }
        .mit-card > div {
            padding: 0px 0px;
        }

        .mit-card .card-name {
            white-space: nowrap;
        }

        .mit-card .card-data {
            text-align: right;
        }

            .mit-card .card-data span:nth-child(1) {
                margin-right: 15px;
            }

            .mit-card .card-data span:nth-child(2) {
                font-size: 0.8rem;
            }
</style>