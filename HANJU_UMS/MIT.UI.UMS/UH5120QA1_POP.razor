@using MIT.Razor.Pages.Component.Grid
@using MIT.Razor.Pages.Component.Grid.Data
@using MIT.Razor.Pages.Component.Grid.RepositoryItem
@using MIT.Razor.Pages.Component.DataEdits
@using MIT.UI.LIB.DataEdits
@using MIT.UI.LIB.Grid.RepositoryItem
@using MIT.DataUtil.Common;
@using System.Data;

@inherits UH5120QA1_POPBase
@{/*
    * 작성자명 : quristyle
    * 작성일자 : 25-02-05
    * 최종수정 : 25-02-14
    * 화면ID : UH5120QA1
    * 화면명 : 실적외 데이터 관리
    * 프로시저 : P_EXCL_RST_SELECT, P_EXCEL_RST_SAVE, P_EXCL_RST_DEL
    */
            }


            <DxFormLayout CssClass="w-100">    
                @{ /* search area */ }
    @* <DxFormLayoutGroup Caption="조회조건" CssClass="mit-search-area" Decoration="FormLayoutGroupDecoration.Card" ColSpanSm="12"> *@
    @*     <DxFormLayoutItem Caption="실적제외일자" ColSpanSm="3"><CommonDateEdit @ref=@SDATE /></DxFormLayoutItem> *@
    @*     <DxFormLayoutItem Caption="~" ColSpanSm="3"><CommonDateEdit @ref=@EDATE /></DxFormLayoutItem> *@
    @* <DxFormLayoutItem Caption="계측기" ColSpanSm="3"><MitCombo CodeId="FDR" @ref="@MC_ID"  @bind-Text="@CmName" @bind-Value="@CmId" /></DxFormLayoutItem> *@
    @* </DxFormLayoutGroup> *@
    @{ /* content area */ }
    <DxFormLayoutGroup Caption="" CssClass="mit-content-area" Decoration="FormLayoutGroupDecoration.Card" ColSpanSm="12">
        <div class="container w-100">
            <div class="row">
                <div class="col-md-3 col-12" style="display:@(IsSideView?"block;":"none;")">

                    <DxFormLayoutGroup Caption="실적제외 시작일자" Decoration="FormLayoutGroupDecoration.Card" ColSpanSm="12">
                        <DxFormLayoutItem ColSpanSm="12">
                            <CommonDateEdit @ref=@SDATE />
                        </DxFormLayoutItem>
                    </DxFormLayoutGroup>

                    <DxFormLayoutGroup Caption="실적제외 종료일자" Decoration="FormLayoutGroupDecoration.Card" ColSpanSm="12">
                        <DxFormLayoutItem ColSpanSm="12">
                            <CommonDateEdit @ref=@EDATE />
                        </DxFormLayoutItem>
                    </DxFormLayoutGroup>

                    <DxFormLayoutGroup Caption="계측기" Decoration="FormLayoutGroupDecoration.Card" ColSpanSm="12">
                        <DxFormLayoutItem ColSpanSm="12">
                            <MitCombo CodeId="FDR" @ref="@MC_ID" @bind-Text="@CmName" @bind-Value="@CmId" />
                        </DxFormLayoutItem>
                    </DxFormLayoutGroup>
                </div>
                <div class="col-md-@(IsSideView?"9":"12") col-12">
                    <DxFormLayoutGroup Caption="Information" Decoration="FormLayoutGroupDecoration.None" ColSpanSm="12">

                        <DxFormLayoutItem Caption="실적제외일자" ColSpanSm="1"/>
                        <div class="dxbl-col-sm-1 dxbl-col dxbl-fl-item dxbl-fl-item-horizontal"><DxTextBox ReadOnly=true @bind-Text=@StartDate CssClass="dxbl-fl-ctrl" /></div>
                        <div class="dxbl-col-sm-1 dxbl-col dxbl-fl-item dxbl-fl-item-horizontal"><DxTextBox ReadOnly=true @bind-Text=@EndDate CssClass="dxbl-fl-ctrl" /></div>
                        <DxFormLayoutItem Caption="회사명" ColSpanSm="3">
                            <DxTextBox ReadOnly=true @bind-Text=@ComName />
                        </DxFormLayoutItem>
                        <DxFormLayoutItem Caption="계측기" ColSpanSm="4">
                            <DxTextBox  ReadOnly=true @bind-Text=@(McText)/>

                        </DxFormLayoutItem>
                        <div class="p-2 col-2">
                            <DxToolbar >
                                <Items>
                                    <DxToolbarItem Click="@btn_Search" Text="조회" IconCssClass="main-toolbar-btn-icon-search" BeginGroup=true Alignment="ToolbarItemAlignment.Right" />
                                    <DxToolbarItem Click="@btn_Save" Text="저장" IconCssClass="main-toolbar-btn-icon-save" BeginGroup=true Alignment="ToolbarItemAlignment.Right" />
                                    <DxToolbarItem Click="@btn_Delete" Text="삭제" IconCssClass="main-toolbar-btn-icon-delete" BeginGroup=true Alignment="ToolbarItemAlignment.Right" />
                                </Items>
                            </DxToolbar>
                        </div>
                    </DxFormLayoutGroup>


                    <DxFormLayoutGroup Caption="실적외 데이터 관리" Decoration="FormLayoutGroupDecoration.None" ColSpanSm="12">

                        <DxFormLayoutItem ColSpanSm="12">
                            <CommonGrid @ref="Grd1"
                            IsCheckBox="true"
                            IsShowToolBar="true"
                            ExportFileName="실적외 데이터 관리"
                            IsExportButtonEnabled="false"
                            IsExportDocEnabled="false"
                            IsExportImageEnabled="false"
                            IsExportPDFEnabled="false"
                            IsExportXlsxEnabled="false"
                            IsAddButtonEnabled="true"
                            InitNewRowChanging=OnRowNewClick
                            CssClass="setting-program-grid mit-popup-grid">
                                <DataColumnsTemplate>
                                    <DxGridDataColumn Caption="장치" FieldName="MC_ID" MinWidth="290" TextAlignment="GridTextAlignment.Left" CaptionAlignment="GridTextAlignment.Center">
                                        <CellDisplayTemplate Context="context2">
                                            @{
                                                DataRow mcRow = FDR_DATA.AsEnumerable().FirstOrDefault(r => r.Field<string>("CM_ID") == context2.DisplayText);
                                            }
                                            <div class="col-12 text-center"><span class="w-100">@(mcRow?.Field<string>("CM_NAME") ?? string.Empty)</span></div>
                                            
                                            @* <RepositoryItemTextBox CellContext="context2" ReadOnly="true" /> *@

                                    </CellDisplayTemplate>
                                </DxGridDataColumn>
                                @* <DxGridDataColumn Caption="장치명" FieldName="DESCRIPT" Width="160" TextAlignment="GridTextAlignment.Left" CaptionAlignment="GridTextAlignment.Center"></DxGridDataColumn>                     *@

                                <DxGridDataColumn Caption="실적제외 시작일" FieldName="EXCL_SDATE" Width="120" TextAlignment="GridTextAlignment.Center" CaptionAlignment="GridTextAlignment.Center">
                                    <CellDisplayTemplate Context="context2">


                                        <RepositoryItemDateEdit CellContext="context2" />


                                    </CellDisplayTemplate>
                                </DxGridDataColumn>
                                <DxGridDataColumn Caption="시작시간" FieldName="EXCL_STIME" Width="100" TextAlignment="GridTextAlignment.Center" CaptionAlignment="GridTextAlignment.Center">
                                    <CellDisplayTemplate Context="context2">

                                            <RepositoryItemTimeEdit CellContext="context2" DisplayFormat="HH:mm" />

                                    </CellDisplayTemplate>
                                </DxGridDataColumn>

                                <DxGridDataColumn Caption="실적제외 종료일" FieldName="EXCL_EDATE" Width="120" TextAlignment="GridTextAlignment.Center" CaptionAlignment="GridTextAlignment.Center">
                                    <CellDisplayTemplate Context="context2">

                                        @* <DxDateEdit Date='@((context2.GetRowValue("EXCL_EDATE")+" "+context2.GetRowValue("EXCL_ETIME")).ToDateTime())' TimeSectionVisible="true" Enabled="true" Format="yyyy:MM:dd HH:mm" *@
                                        @*             CssClass="cw-420" /> *@

                                        <RepositoryItemDateEdit CellContext="context2" />


                                    </CellDisplayTemplate>
                                </DxGridDataColumn>
                                <DxGridDataColumn Caption="종료시간" FieldName="EXCL_ETIME" Width="100" TextAlignment="GridTextAlignment.Center" CaptionAlignment="GridTextAlignment.Center"><CellDisplayTemplate Context="context2">


                                            <RepositoryItemTimeEdit CellContext="context2" DisplayFormat="HH:mm" />



                                    </CellDisplayTemplate></DxGridDataColumn>

                                <DxGridDataColumn Caption="실적제외사유" FieldName="EXCL_REMARK" TextAlignment="GridTextAlignment.Left" CaptionAlignment="GridTextAlignment.Center"><CellDisplayTemplate Context="context2"><RepositoryItemTextBox CellContext="context2" /></CellDisplayTemplate></DxGridDataColumn>
                            </DataColumnsTemplate>

                        </CommonGrid>
                    </DxFormLayoutItem>
                    </DxFormLayoutGroup>
                </div>
            </div>
        </div>
    </DxFormLayoutGroup>
    @if (isLoading)
    {

        <div class="loading-bg">
            <div class="loading-spinner">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        </div>

    }
</DxFormLayout>

<style>
    .container {
        max-width: unset;
    }
    .mit-popup-grid{
        height: calc(var(--dxbl-popup-resize-container-height) - 20rem) !important;
    }
    .loading-bg {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(180, 180, 180, 0.4);
    }
    .loading-spinner {
        position: fixed;
        top: calc(50% - 40px);
        left: calc(50% - 15px);
    }
</style>

@code {



    protected async Task OnRowNewClick(CommonGridInitNewRowEventArgs e)
    {

        DataRow dr = e.Row;
        try
        {


            if (!string.IsNullOrEmpty(MC_ID.Value))
            {
                dr["MC_ID"] = MC_ID.Value;
                dr["DESCRIPT"] = MC_ID.Text;
            }

            if (string.IsNullOrEmpty(dr["EXCL_SDATE"] + ""))
            {
                dr["EXCL_SDATE"] = DateTime.Now.ToString("yyyy-MM-dd");
                dr["EXCL_STIME"] = DateTime.Now.ToString("HH:mm");



            }
            else
            {
                DateTime dateTime = (DateTime)dr["EXCL_SDATE"];
                if (dateTime != null && dateTime == DateTime.MinValue)
                {
                    dr["EXCL_SDATE"] = DateTime.Now;
                    dr["EXCL_STIME"] = DateTime.Now.ToString("HH:mm");
                }
            }




            if (string.IsNullOrEmpty(dr["EXCL_EDATE"] + ""))
            {
                dr["EXCL_EDATE"] = DateTime.Now.ToString("yyyy-MM-dd");
                dr["EXCL_ETIME"] = DateTime.Now.ToString("HH:mm");
            }
            else
            {
                DateTime dateTime = (DateTime)dr["EXCL_EDATE"];
                if (dateTime != null && dateTime == DateTime.MinValue)
                {
                    dr["EXCL_EDATE"] = DateTime.Now;
                    dr["EXCL_ETIME"] = DateTime.Now.ToString("HH:mm");
                }
            }




        }
        catch
        {

        }

        StateHasChanged();
    }



          }