@using DevExpress.Blazor
@using MIT.DataUtil.Common;
@using System.Data;

@namespace MIT.Razor.Pages.Component.Charts

@inherits CommonPieBase

@if (_datatable != null)
{
    <DxPieChart @ref="@Chart" Data="@_datatable.AsEnumerable()" CssClass="@($"{CssClass} common-chart")" Width="@WidthStr" Height="@HeightStr" Diameter="@Diameter" InnerDiameter="@innerDiameter">

        <DxChartTitle Text="@ChartTitle">
            <DxChartSubTitle Text="@ChartSubTitle" />
        </DxChartTitle>

        @if (IsShowToolTip)
        {
            @if (ToolTipTemplate == null)
            {
                <DxChartTooltip Enabled="true" Position="RelativePosition.Outside">
                    <div style="margin: 0.75rem">
                        <div class="fw-bold">@context.Point.Argument</div>
                        <div>@context.Point.Value</div>
                    </div>
                </DxChartTooltip>
            }
            else
            {
                @ToolTipTemplate
            }
        }

        @if (IsShowLegend)
        {
            @if (LegendTemplate == null)
            {
                <DxChartLegend AllowToggleSeries="true"
                                Position="RelativePosition.Outside"
                                Orientation="Orientation.Horizontal"
                                VerticalAlignment="VerticalEdge.Bottom"
                                HorizontalAlignment="HorizontalAlignment.Center">
                </DxChartLegend>
            }
            else
            {
                @LegendTemplate
            }
        }

        <DxPieChartSeries T="DataRow"
                            TArgument="object"
                            TValue="object"
                            ArgumentField="@(dr => dr["Argument"])"
                            ValueField="@(dr => dr["Val"])">
        </DxPieChartSeries>
        
    </DxPieChart>
}
<style>
    .dxbl-group {
        height: calc(100% + 10px);
    }
</style>