@using DevExpress.Blazor;
@using MIT.DataUtil.Common;
@using System.Data;

@inherits RepositoryItemComponentBase
@if (ReadOnly)
{
  if (string.IsNullOrEmpty(DisplayFormat))
  {
    @CellContext?.GetRowValue(CellContext.DataColumn.FieldName).ToStringTrim()
  }
  else
  {
    if (DisplayFormat.StartsWith("{"))
    {
      @string.Format(DisplayFormat, CellContext?.GetRowValue(CellContext.DataColumn.FieldName).ToDecimal())
    }
    else if (IsNullToZero)
    {
      @string.Format("{0:" + DisplayFormat + "}", CellContext?.GetRowValue(CellContext.DataColumn.FieldName).ToDecimal())
    }
    else
    {
      if ( string.IsNullOrEmpty(CellContext?.GetRowValue(CellContext.DataColumn.FieldName).ToStringTrim()) ){
        
      }
      else{
        @string.Format("{0:" + DisplayFormat + "}", CellContext?.GetRowValue(CellContext.DataColumn.FieldName).ToDecimal())
      }
    }
  }
}
else if (IsEditCheck())
{
    var data = CellContext?.GetRowValue(CellContext.DataColumn.FieldName).ToString();
    <DxSpinEdit Value="@data.ToDecimal()"
                ValueChanged="@((decimal value) => OnValueChanged(CellContext, value))"
                BindValueMode="BindValueMode.OnInput"
                DisplayFormat="@DisplayFormat"
                Mask="@EditFormat"
                ReadOnly="@ReadOnly"
                Enabled="@Enable" />
}
else
{
    if (string.IsNullOrEmpty(DisplayFormat))
    {
        @CellContext?.GetRowValue(CellContext.DataColumn.FieldName).ToStringTrim()
    }
    else
    {
        if (DisplayFormat.StartsWith("{"))
        {
            @string.Format(DisplayFormat, CellContext?.GetRowValue(CellContext.DataColumn.FieldName).ToDecimal())
    }
    else if (IsNullToZero)
    {
      @string.Format("{0:" + DisplayFormat + "}", CellContext?.GetRowValue(CellContext.DataColumn.FieldName).ToDecimal())
    }
    else
    {
      if (string.IsNullOrEmpty(CellContext?.GetRowValue(CellContext.DataColumn.FieldName).ToStringTrim()))
      {

      }
      else
      {
        @string.Format("{0:" + DisplayFormat + "}", CellContext?.GetRowValue(CellContext.DataColumn.FieldName).ToDecimal())
      }
    }
    }
}

@code {
    [Parameter]    public string? DisplayFormat { get; set; } = null;
  [Parameter] public string? EditFormat { get; set; } = null;
  [Parameter] public bool IsNullToZero { get; set; } = false;

    protected void OnValueChanged(GridDataColumnCellDisplayTemplateContext? context, decimal value)
    {
        if (context == null || context.DataItem == null)
            return;
        var grd = context.Grid as DxGrid;
        var dataItem = context.DataItem as DataRowView;

        if (dataItem == null || grd == null)
            return;

        dataItem["CHK"] = "Y";
        dataItem[context.DataColumn.FieldName] = value;

        grd.SelectDataItem(dataItem);
    }
}
