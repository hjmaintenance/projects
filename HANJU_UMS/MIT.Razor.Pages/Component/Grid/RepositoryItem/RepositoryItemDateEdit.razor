@using DevExpress.Blazor;
@using MIT.DataUtil.Common;
@using System.Data;

@inherits RepositoryItemComponentBase

@if (ReadOnly){
  var dtObj = @CellContext?.GetRowValue(CellContext.DataColumn.FieldName); //.ToStringTrim()
  if( dtObj.GetType() == typeof(DateTime)){
    <span>@(((DateTime)dtObj).ToString("yyyy-MM-dd HH:mm:ss.fff"))</span>
  }
  else{
    <span>@(dtObj.ToStringTrim())</span>
  }
}
else if (IsEditCheck()){
    var datetime = CellContext?.GetRowValue(CellContext.DataColumn.FieldName);

      <DxDateEdit Date="@datetime.ToDateTime()" DisplayFormat="@DisplayFormat"
                  ReadOnly="@ReadOnly"
                  Enabled="@Enable"
                Format="@DisplayFormat"                
                DateChanged="@((DateTime newValue) => OnValueChanged(CellContext, newValue))"
                CssClass="cw-320" />
}
else{
    @CellContext?.GetRowValue(CellContext.DataColumn.FieldName).ToDateTime().ToString(DisplayFormat)
}


@code {
    /// <summary>
    /// 날짜 포멧 설정
    /// 기본 yyyy-MM-dd 으로 설정
    /// </summary>
    [Parameter]    public string DisplayFormat { get; set; } = "yyyy-MM-dd";

    protected void OnValueChanged(GridDataColumnCellDisplayTemplateContext? context, object value)
    {
        if (context == null || context.DataItem == null)
            return;
        var grd = context.Grid as DxGrid;
        var dataItem = context.DataItem as DataRowView;

        if (dataItem == null || grd == null)
            return;

        dataItem["CHK"] = "Y";
    if (value.GetType() == typeof(DateTime)) {
      dataItem[context.DataColumn.FieldName] = ((DateTime)value).ToString(DisplayFormat);

    }
    else {
      dataItem[context.DataColumn.FieldName] = value;
    }

        grd.SelectDataItem(dataItem);
    }
}