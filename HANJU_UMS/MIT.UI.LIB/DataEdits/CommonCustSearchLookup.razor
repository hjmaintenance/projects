@using MIT.DataUtil.Common
@using MIT.Razor.Pages.Component
@using MIT.Razor.Pages.Component.DataEdits
@using MIT.Razor.Pages.Component.DataEdits.Data
@using System.Data
@using MIT.Razor.Pages.Service
@using MIT.UI.LIB.DataEdits.Data
@using System.Collections.ObjectModel

@inherits CommonSearchLookupUIComponentBase<CustImageComboBoxData>

<CommonSearchLookup TItem="CustImageComboBoxData"
                    @ref="@ComboBox"
                    ValueFieldName="@ValueFieldName"
                    DisplayFieldName="@DisplayFieldName"
                    IsShowEmptyRow="@IsShowEmptyRow"
                    EmptyRowName="@EmptyRowName"
                    IsFirstRowSelected="@IsFirstRowSelected"
                    Columns="@Columns"
                    EditFormat="{0}"
                    ValueChanged="@((ImageComboBoxData? item) => OnValueChanged(item))">

</CommonSearchLookup>

@code {
    [Parameter]
    public string DisplayFieldName { get; set; } = "CUST_NAME";
    [Parameter]
    public string ValueFieldName { get; set; } = "CUST_CODE";

    [Parameter]
    public string CUST_CODE { get; set; } = string.Empty;
    [Parameter]
    public string CUST_DIV { get; set; } = string.Empty;
    [Parameter]
    public string CUST_NAME { get; set; } = string.Empty;

    [Parameter]
    public string QueryName { get; set; } = "SP_COMBO_COM_CUST_SELECT";

    public List<SearchLookupColumns> Columns { get; set; } = new List<SearchLookupColumns>() {
            new SearchLookupColumns() { FieldName = "CUST_NAME", Caption="거래처명", Width="200px" },
            new SearchLookupColumns() { FieldName = "CUST_DIV", Caption="구분", Width="100px" },
            new SearchLookupColumns() { FieldName = "CUST_CODE", Caption="거래처코드", Width="100px" },
        };

    public override async Task LoadData()
    {
        if (ComboBox != null)
        {
            DataTable? dt = await DBSearch();

            if (dt == null || dt.Rows.Count == 0)
                ComboBox.DataSource.Clear();
            else
            {
                ObservableCollection<CustImageComboBoxData> list = new ObservableCollection<CustImageComboBoxData>();

                foreach (DataRow row in dt.Rows)
                {
                    CustImageComboBoxData data = new CustImageComboBoxData();
                    data.CUST_CODE = row["CUST_CODE"].ToStringTrim();
                    data.CUST_DIV = row["CUST_DIV"].ToStringTrim();
                    data.CUST_NAME = row["CUST_NAME"].ToStringTrim();
                    data.Value = row[ValueFieldName].ToStringTrim();
                    data.Row = row;

                    list.Add(data);
                }

                ComboBox.DataSource = list;
            }
        }

    }

    #region [ 데이터 정의 메소드 ]

    private async Task<DataTable?> DBSearch()
    {
        if (QueryService == null)
            throw new Exception("QueryService가 Null 입니다.");

        if (QueryName == null)
            throw new Exception("QueryName의 값이 없습니다.");

        var datatable = await QueryService.ExecuteDatatableAsync(QueryName, new Dictionary<string, object?>()
        {
            { "CUST_CODE", CUST_CODE },
            { "CUST_DIV", CUST_DIV },
            { "CUST_NAME", CUST_NAME },
        });

        return datatable;
    }

    #endregion [ 데이터 정의 메소드 ]
}
